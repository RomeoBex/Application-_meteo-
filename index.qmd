---
title: "Application météo"
---

Prévisions météorologiques des 4 prochains jours : 



```{=html}
<!DOCTYPE html>
<html>
<head>
    <title>Prévisions de température et précipitations</title>
</head>
<body>
    <table border="1">
        <tr>
            <th><strong>Jour</strong></th>
            <th><strong>Température actuelle (°C)</strong></th>
            <th><strong>Température maximale (°C)</strong></th>
            <th><strong>Température minimale (°C)</strong></th>
            <th><strong>Précipitations (mm)</strong></th> <!-- Nouvelle colonne pour les précipitations -->
        </tr>
        <!-- Les données seront remplies ici par JavaScript -->
    </table>

    <footer>
        <p>&copy; <strong>2023 Roméo BEX Tous droits réservés.</strong></p>
    </footer>

    <script>
        // Fonction pour obtenir le nom du jour de la semaine en fonction de la date
        function getDayName(day) {
            const days = ["Dimanche", "Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi", "Samedi"];
            return days[day];
        }

        // Fonction pour faire une requête à l'API de température actuelle
        function fetchCurrentTemperature() {
            const currentTempApiUrl = "https://api.open-meteo.com/v1/meteofrance?latitude=43.6109&longitude=3.8763&hourly=temperature_2m";

            fetch(currentTempApiUrl)
                .then(response => response.json())
                .then(data => {
                    const temperatureData = data.hourly.temperature_2m;

                    // Sélectionner le tableau HTML
                    const table = document.querySelector("table");

                    // Obtenir le jour actuel
                    const currentDate = new Date();
                    const currentDay = currentDate.getDay();

                    // Boucler à travers les données et les ajouter au tableau
                    for (let i = 0; i < 4; i++) { // Affiche uniquement les 4 prochains jours
                        const row = table.insertRow(-1);
                        const dayCell = row.insertCell(0);
                        const tempCell = row.insertCell(1);

                        // Calculer le jour de la semaine en fonction du jour actuel
                        const dayIndex = (currentDay + i) % 7;
                        const dayName = getDayName(dayIndex);

                        dayCell.innerHTML = dayName;
                        tempCell.innerHTML = `${temperatureData[i]}°C`;
                    }
                })
                .catch(error => console.error("Erreur lors de la récupération des données de température actuelle : " + error));
        }

        // Fonction pour faire une requête à l'API de température maximale et minimale et précipitations
        function fetchMaxMinTemperatureAndPrecipitations() {
            const maxMinTempApiUrl = "https://api.open-meteo.com/v1/meteofrance?latitude=43.6109&longitude=3.8763&daily=temperature_2m_max,temperature_2m_min&hourly=precipitation&timezone=Europe%2FBerlin";

           fetch(maxMinTempApiUrl)
        .then(response => response.json())
        .then(data => {
            // Récupérer les données de température maximale et minimale pour les 4 prochains jours
            const maxTempData = data.daily.temperature_2m_max.slice(0, 4);
            const minTempData = data.daily.temperature_2m_min.slice(0, 4);

            // Récupérer les données de précipitations pour les 4 prochains jours
            const precipitationData = data.hourly.precipitation.slice(0, 4);

            // Sélectionner le tableau HTML
            const table = document.querySelector("table");

            // Boucler à travers les données et les ajouter au tableau
            for (let i = 0; i < 4; i++) { // Affiche uniquement les 4 prochains jours
                const row = table.rows[i + 1]; // Commence à la deuxième ligne
                const maxTempCell = row.insertCell(2);
                const minTempCell = row.insertCell(3);
                const precipitationCell = row.insertCell(4); // Nouvelle colonne pour les précipitations

                maxTempCell.innerHTML = `${maxTempData[i]}°C`;
                minTempCell.innerHTML = `${minTempData[i]}°C`;
                
                // Afficher les données de précipitations
                precipitationCell.innerHTML = `${precipitationData[i]} mm`;
            }
        })
        .catch(error => console.error("Erreur lors de la récupération des données de température maximale, minimale et précipitations : " + error));
}

        // Appeler la fonction pour récupérer les données de température et précipitations
        fetchCurrentTemperature();
        fetchMaxMinTemperatureAndPrecipitations();
    </script>
</body>
</html>

``` 